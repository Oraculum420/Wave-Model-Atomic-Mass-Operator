from math import sin, exp
try:
    from scipy.integrate import quad
    HAS_SCIPY = True
except ImportError:
    HAS_SCIPY = False

def trapezoidal_integrate(func, a, b, args=(), steps=10000):
    h = (b - a) / steps
    result = 0.5 * (func(a, *args) + func(b, *args))
    for i in range(1, steps):
        result += func(a + i * h, *args)
    return result * h

def mass_operator(r, A0, k1, k2, gamma):
    return A0 * sin(k1 * r) * sin(k2 * r) * exp(-gamma * r)

def compute_mass(A0, k1, k2, gamma, R):
    if HAS_SCIPY:
        result, _ = quad(mass_operator, 0, R, args=(A0, k1, k2, gamma))
        return result
    else:
        return trapezoidal_integrate(mass_operator, 0, R, args=(A0, k1, k2, gamma))

mass_operator_data = {
    1: {'A0': 4.984932547479036, 'k1': 12.347030612244897, 'k2': 13.979944897959184, 'gamma': 1.2756479591836734, 'R': 0.8414},
    2: {'A0': 4.984932547479036, 'k1': 12.347030612244897, 'k2': 13.979944897959184, 'gamma': 1.2756479591836734, 'R': 0.8414},
    3: {'A0': 4.984932547479036, 'k1': 12.347030612244897, 'k2': 13.979944897959184, 'gamma': 1.2756479591836734, 'R': 0.8414},
    4: {'A0': 4.984932547479036, 'k1': 12.347030612244897, 'k2': 13.979944897959184, 'gamma': 1.2756479591836734, 'R': 0.8414},
    5: {'A0': 4.984932547479036, 'k1': 12.347030612244897, 'k2': 13.979944897959184, 'gamma': 1.2756479591836734, 'R': 0.8414},
    6: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    7: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    8: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    9: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    10: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    11: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    12: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    13: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    14: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    15: {'A0': -140.3708651393422, 'k1': 6.010226530612245, 'k2': 1.9939316326530607, 'gamma': 0.4190234693877551, 'R': 2.59},
    16: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    17: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    18: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    19: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    20: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    21: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    22: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    23: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    24: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    25: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    26: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    27: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    28: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    29: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    30: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    31: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    32: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    33: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    34: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    35: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    36: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    37: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    38: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    39: {'A0': 793.0459293373782, 'k1': 8.060900351864884, 'k2': 3.2901752287121746, 'gamma': 0.6608620689655172, 'R': 2.6991},
    40: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    41: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    42: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    43: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    44: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    45: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    46: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    47: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    48: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    49: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    50: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    51: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    52: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    53: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    54: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    55: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    56: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    57: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    58: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    59: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    60: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    61: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    62: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    63: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    64: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    65: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    66: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    67: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    68: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    69: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    70: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    71: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    72: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    73: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    74: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    75: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    76: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    77: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    78: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    79: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    80: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    81: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    82: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    83: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    84: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    85: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    86: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    87: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    88: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    89: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    90: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    91: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    92: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    93: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    94: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    95: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    96: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    97: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    98: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    99: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    100: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    101: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    102: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    103: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    104: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    105: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    106: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    107: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    108: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    109: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    110: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    111: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    112: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    113: {'A0': 4722.018992548068, 'k1': 8.887651653764955, 'k2': 3.5586664320900776, 'gamma': 0.6829034482758621, 'R': 3.478},
    114: {'A0': 6388.778579972741, 'k1': 8.427671921182265, 'k2': 3.724109359605911, 'gamma': 0.6948571428571428, 'R': 4.394},
}

observed_masses = {
    1: 1.00784,
    2: 4.002602,
    3: 6.94,
    4: 9.0121831,
    5: 10.81,
    6: 12.0,
    7: 14.0067,
    8: 15.999,
    9: 18.998,
    10: 20.1797,
    11: 22.989769,
    12: 24.305,
    13: 26.981538,
    14: 28.085,
    15: 30.973762,
    16: 32.06,
    17: 35.45,
    18: 39.948,
    19: 39.0983,
    20: 40.078,
    26: 55.845,
    29: 63.546,
    40: 91.224,
    47: 107.8682,
    50: 118.71,
    53: 126.90447,
    56: 137.327,
    79: 196.966569,
    82: 207.2,
    92: 238.02891,
    114: 289.0,
}


def compute_mass_by_A(A):
    if A not in mass_operator_data:
        raise ValueError(f"Mass number {A} not found in operator database.")
    p = mass_operator_data[A]
    return compute_mass(p['A0'], p['k1'], p['k2'], p['gamma'], p['R'])

def get_observed_mass(A):
    return observed_masses.get(A, None)

def compute_percent_error(predicted, observed):
    if observed is None or predicted is None:
        return None
    return 100 * (predicted - observed) / observed

if __name__ == "__main__":
    import sys
    if len(sys.argv) != 2:
        print("Usage: python3 mass_operator_full_114_with_observed.py [MassNumber]")
        sys.exit(1)
    try:
        A = int(sys.argv[1])
        predicted = compute_mass_by_A(A)
        observed = get_observed_mass(A)
        error = compute_percent_error(predicted, observed)
        print(f"Computed mass for A={{A}}: {{predicted}}")
        if observed is not None:
            print(f"Observed mass: {{observed}}")
            print(f"Percent error: {{error:.6f}}%")
        else:
            print("Observed mass: Not available")
    except Exception as e:
        print(f"Error: {{e}}")
